#include "Stdafx.h"
#include "IO/WindowsError.h"

Text::CString IO::WindowsError::GetString(UInt32 errorCode)
{
	switch (errorCode)
	{
	case 0x00000000:
		return CSTR("S_OK");
	case 0x00000001:
		return CSTR("S_FALSE");
	case 0x00090312:
		return CSTR("SEC_I_CONTINUE_NEEDED");
	case 0x00090313:
		return CSTR("SEC_I_COMPLETE_NEEDED");
	case 0x00090314:
		return CSTR("SEC_I_COMPLETE_AND_CONTINUE");
	case 0x00090315:
		return CSTR("SEC_I_LOCAL_LOGON");
	case 0x00090316:
		return CSTR("SEC_I_GENERIC_EXTENSION_RECEIVED");
	case 0x00090317:
		return CSTR("SEC_I_CONTEXT_EXPIRED");
	case 0x00090320:
		return CSTR("SEC_I_INCOMPLETE_CREDENTIALS");
	case 0x00090321:
		return CSTR("SEC_I_RENEGOTIATE");
	case 0x00090323:
		return CSTR("SEC_I_NO_LSA_CONTEXT");
	case 0x8000000A:
		return CSTR("E_PENDING");
	case 0x80004001:
		return CSTR("E_NOTIMPL");
	case 0x80004002:
		return CSTR("E_NOINTERFACE");
	case 0x80004003:
		return CSTR("E_POINTER");
	case 0x80004004:
		return CSTR("E_ABORT");
	case 0x80004005:
		return CSTR("E_FAIL");
	case 0x80004006:
		return CSTR("CO_E_INIT_TLS");
	case 0x80004007:
		return CSTR("CO_E_INIT_SHARED_ALLOCATOR");
	case 0x80004008:
		return CSTR("CO_E_INIT_MEMORY_ALLOCATOR");
	case 0x80004009:
		return CSTR("CO_E_INIT_CLASS_CACHE");
	case 0x8000400A:
		return CSTR("CO_E_INIT_RPC_CHANNEL");
	case 0x8000400B:
		return CSTR("CO_E_INIT_TLS_SET_CHANNEL_CONTROL");
	case 0x8000400C:
		return CSTR("CO_E_INIT_TLS_CHANNEL_CONTROL");
	case 0x8000400D:
		return CSTR("CO_E_INIT_UNACCEPTED_USER_ALLOCATOR");
	case 0x8000400E:
		return CSTR("CO_E_INIT_SCM_MUTEX_EXISTS");
	case 0x8000400F:
		return CSTR("CO_E_INIT_SCM_FILE_MAPPING_EXISTS");
	case 0x80004010:
		return CSTR("CO_E_INIT_SCM_MAP_VIEW_OF_FILE");
	case 0x80004011:
		return CSTR("CO_E_INIT_SCM_EXEC_FAILURE");
	case 0x80004012:
		return CSTR("CO_E_INIT_ONLY_SINGLE_THREADED");
	case 0x80004013:
		return CSTR("CO_E_CANT_REMOTE");
	case 0x80004014:
		return CSTR("CO_E_BAD_SERVER_NAME");
	case 0x80004015:
		return CSTR("CO_E_WRONG_SERVER_IDENTITY");
	case 0x80004016:
		return CSTR("CO_E_OLE1DDE_DISABLED");
	case 0x80004017:
		return CSTR("CO_E_RUNAS_SYNTAX");
	case 0x80004018:
		return CSTR("CO_E_CREATEPROCESS_FAILURE");
	case 0x80004019:
		return CSTR("CO_E_RUNAS_CREATEPROCESS_FAILURE");
	case 0x8000401A:
		return CSTR("CO_E_RUNAS_LOGON_FAILURE");
	case 0x8000401B:
		return CSTR("CO_E_LAUNCH_PERMSSION_DENIED");
	case 0x8000401C:
		return CSTR("CO_E_START_SERVICE_FAILURE");
	case 0x8000401D:
		return CSTR("CO_E_REMOTE_COMMUNICATION_FAILURE");
	case 0x8000401E:
		return CSTR("CO_E_SERVER_START_TIMEOUT");
	case 0x8000401F:
		return CSTR("CO_E_CLSREG_INCONSISTENT");
	case 0x80004020:
		return CSTR("CO_E_IIDREG_INCONSISTENT");
	case 0x80004021:
		return CSTR("CO_E_NOT_SUPPORTED");
	case 0x80004022:
		return CSTR("CO_E_RELOAD_DLL");
	case 0x80004023:
		return CSTR("CO_E_MSI_ERROR");
	case 0x80004024:
		return CSTR("CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT");
	case 0x80004025:
		return CSTR("CO_E_SERVER_PAUSED");
	case 0x80004026:
		return CSTR("CO_E_SERVER_NOT_PAUSED");
	case 0x80004027:
		return CSTR("CO_E_CLASS_DISABLED");
	case 0x80004028:
		return CSTR("CO_E_CLRNOTAVAILABLE");
	case 0x80004029:
		return CSTR("CO_E_ASYNC_WORK_REJECTED");
	case 0x8000402A:
		return CSTR("CO_E_SERVER_INIT_TIMEOUT");
	case 0x8000402B:
		return CSTR("CO_E_NO_SECCTX_IN_ACTIVATE");
	case 0x80004030:
		return CSTR("CO_E_TRACKER_CONFIG");
	case 0x80004031:
		return CSTR("CO_E_THREADPOOL_CONFIG");
	case 0x80004032:
		return CSTR("CO_E_SXS_CONFIG");
	case 0x80004033:
		return CSTR("CO_E_MALFORMED_SPN");
	case 0x8000FFFF:
		return CSTR("E_UNEXPECTED");
	case 0x80040000:
		return CSTR("OLE_E_OLEVERB");
	case 0x80040001:
		return CSTR("OLE_E_ADVF");
	case 0x80040002:
		return CSTR("OLE_E_ENUM_NOMORE");
	case 0x80040003:
		return CSTR("OLE_E_ADVISENOTSUPPORTED");
	case 0x80040004:
		return CSTR("OLE_E_NOCONNECTION");
	case 0x80040005:
		return CSTR("OLE_E_NOTRUNNING");
	case 0x80040006:
		return CSTR("OLE_E_NOCACHE");
	case 0x80040007:
		return CSTR("OLE_E_BLANK");
	case 0x80040008:
		return CSTR("OLE_E_CLASSDIFF");
	case 0x80040009:
		return CSTR("OLE_E_CANT_GETMONIKER");
	case 0x8004000A:
		return CSTR("OLE_E_CANT_BINDTOSOURCE");
	case 0x8004000B:
		return CSTR("OLE_E_STATIC");
	case 0x8004000C:
		return CSTR("OLE_E_PROMPTSAVECANCELLED");
	case 0x8004000D:
		return CSTR("OLE_E_INVALIDRECT");
	case 0x8004000E:
		return CSTR("OLE_E_WRONGCOMPOBJ");
	case 0x8004000F:
		return CSTR("OLE_E_INVALIDHWND");
	case 0x80040010:
		return CSTR("OLE_E_NOT_INPLACEACTIVE");
	case 0x80040011:
		return CSTR("OLE_E_CANTCONVERT");
	case 0x80040012:
		return CSTR("OLE_E_NOSTORAGE");
	case 0x80040064:
		return CSTR("DV_E_FORMATETC");
	case 0x80040065:
		return CSTR("DV_E_DVTARGETDEVICE");
	case 0x80040066:
		return CSTR("DV_E_STGMEDIUM");
	case 0x80040067:
		return CSTR("DV_E_STATDATA");
	case 0x80040068:
		return CSTR("DV_E_LINDEX");
	case 0x80040069:
		return CSTR("DV_E_TYMED");
	case 0x8004006A:
		return CSTR("DV_E_CLIPFORMAT");
	case 0x8004006B:
		return CSTR("DV_E_DVASPECT");
	case 0x8004006C:
		return CSTR("DV_E_DVTARGETDEVICE_SIZE");
	case 0x8004006D:
		return CSTR("DV_E_NOIVIEWOBJECT");
	case 0x80040100:
		return CSTR("DRAGDROP_E_NOTREGISTERED");
	case 0x80040101:
		return CSTR("DRAGDROP_E_ALREADYREGISTERED");
	case 0x80040102:
		return CSTR("DRAGDROP_E_INVALIDHWND");
	case 0x80040110:
		return CSTR("CLASS_E_NOAGGREGATION");
	case 0x80040111:
		return CSTR("CLASS_E_CLASSNOTAVAILABLE");
	case 0x80040112:
		return CSTR("CLASS_E_NOTLICENSED");
	case 0x80040150:
		return CSTR("REGDB_E_READREGDB");
	case 0x80040151:
		return CSTR("REGDB_E_WRITEREGDB");
	case 0x80040152:
		return CSTR("REGDB_E_KEYMISSING");
	case 0x80040153:
		return CSTR("REGDB_E_INVALIDVALUE");
	case 0x80040154:
		return CSTR("REGDB_E_CLASSNOTREG");
	case 0x80040155:
		return CSTR("REGDB_E_IIDNOTREG");
	case 0x80040156:
		return CSTR("REGDB_E_BADTHREADINGMODEL");
	case 0x80040160:
		return CSTR("CAT_E_CATIDNOEXIST");
	case 0x80040161:
		return CSTR("CAT_E_NODESCRIPTION");
	case 0x80040164:
		return CSTR("CS_E_PACKAGE_NOTFOUND");
	case 0x80040165:
		return CSTR("CS_E_NOT_DELETABLE");
	case 0x80040166:
		return CSTR("CS_E_CLASS_NOTFOUND");
	case 0x80040167:
		return CSTR("CS_E_INVALID_VERSION");
	case 0x80040168:
		return CSTR("CS_E_NO_CLASSSTORE");
	case 0x80040169:
		return CSTR("CS_E_OBJECT_NOTFOUND");
	case 0x8004016A:
		return CSTR("CS_E_OBJECT_ALREADY_EXISTS");
	case 0x8004016B:
		return CSTR("CS_E_INVALID_PATH");
	case 0x8004016C:
		return CSTR("CS_E_NETWORK_ERROR");
	case 0x8004016D:
		return CSTR("CS_E_ADMIN_LIMIT_EXCEEDED");
	case 0x8004016E:
		return CSTR("CS_E_SCHEMA_MISMATCH");
	case 0x8004016F:
		return CSTR("CS_E_INTERNAL_ERROR");
	case 0x80040170:
		return CSTR("CACHE_E_NOCACHE_UPDATED");
	case 0x80040180:
		return CSTR("OLEOBJ_E_NOVERBS");
	case 0x80040181:
		return CSTR("OLEOBJ_E_INVALIDVERB");
	case 0x800401A0:
		return CSTR("INPLACE_E_NOTUNDOABLE");
	case 0x800401A1:
		return CSTR("INPLACE_E_NOTOOLSPACE");
	case 0x800401C0:
		return CSTR("CONVERT10_E_OLESTREAM_GET");
	case 0x800401C1:
		return CSTR("CONVERT10_E_OLESTREAM_PUT");
	case 0x800401C2:
		return CSTR("CONVERT10_E_OLESTREAM_FMT");
	case 0x800401C3:
		return CSTR("CONVERT10_E_OLESTREAM_BITMAP_TO_DIB");
	case 0x800401C4:
		return CSTR("CONVERT10_E_STG_FMT");
	case 0x800401C5:
		return CSTR("CONVERT10_E_STG_NO_STD_STREAM");
	case 0x800401C6:
		return CSTR("CONVERT10_E_STG_DIB_TO_BITMAP");
	case 0x800401D0:
		return CSTR("CLIPBRD_E_CANT_OPEN");
	case 0x800401D1:
		return CSTR("CLIPBRD_E_CANT_EMPTY");
	case 0x800401D2:
		return CSTR("CLIPBRD_E_CANT_SET");
	case 0x800401D3:
		return CSTR("CLIPBRD_E_BAD_DATA");
	case 0x800401D4:
		return CSTR("CLIPBRD_E_CANT_CLOSE");
	case 0x800401E0:
		return CSTR("MK_E_CONNECTMANUALLY");
	case 0x800401E1:
		return CSTR("MK_E_EXCEEDEDDEADLINE");
	case 0x800401E2:
		return CSTR("MK_E_NEEDGENERIC");
	case 0x800401E3:
		return CSTR("MK_E_UNAVAILABLE");
	case 0x800401E4:
		return CSTR("MK_E_SYNTAX");
	case 0x800401E5:
		return CSTR("MK_E_NOOBJECT");
	case 0x800401E6:
		return CSTR("MK_E_INVALIDEXTENSION");
	case 0x800401E7:
		return CSTR("MK_E_INTERMEDIATEINTERFACENOTSUPPORTED");
	case 0x800401E8:
		return CSTR("MK_E_NOTBINDABLE");
	case 0x800401E9:
		return CSTR("MK_E_NOTBOUND");
	case 0x800401EA:
		return CSTR("MK_E_CANTOPENFILE");
	case 0x800401EB:
		return CSTR("MK_E_MUSTBOTHERUSER");
	case 0x800401EC:
		return CSTR("MK_E_NOINVERSE");
	case 0x800401ED:
		return CSTR("MK_E_NOSTORAGE");
	case 0x800401EE:
		return CSTR("MK_E_NOPREFIX");
	case 0x800401EF:
		return CSTR("MK_E_ENUMERATION_FAILED");
	case 0x800401F0:
		return CSTR("CO_E_NOTINITIALIZED");
	case 0x800401F1:
		return CSTR("CO_E_ALREADYINITIALIZED");
	case 0x800401F2:
		return CSTR("CO_E_CANTDETERMINECLASS");
	case 0x800401F3:
		return CSTR("CO_E_CLASSSTRING");
	case 0x800401F4:
		return CSTR("CO_E_IIDSTRING");
	case 0x800401F5:
		return CSTR("CO_E_APPNOTFOUND");
	case 0x800401F6:
		return CSTR("CO_E_APPSINGLEUSE");
	case 0x800401F7:
		return CSTR("CO_E_ERRORINAPP");
	case 0x800401F8:
		return CSTR("CO_E_DLLNOTFOUND");
	case 0x800401F9:
		return CSTR("CO_E_ERRORINDLL");
	case 0x800401FA:
		return CSTR("CO_E_WRONGOSFORAPP");
	case 0x800401FB:
		return CSTR("CO_E_OBJNOTREG");
	case 0x800401FC:
		return CSTR("CO_E_OBJISREG");
	case 0x800401FD:
		return CSTR("CO_E_OBJNOTCONNECTED");
	case 0x800401FE:
		return CSTR("CO_E_APPDIDNTREG");
	case 0x800401FF:
		return CSTR("CO_E_RELEASED");
	case 0x00040200:
		return CSTR("EVENT_S_SOME_SUBSCRIBERS_FAILED");
	case 0x80040201:
		return CSTR("EVENT_E_ALL_SUBSCRIBERS_FAILED");
	case 0x00040202:
		return CSTR("EVENT_S_NOSUBSCRIBERS");
	case 0x80040203:
		return CSTR("EVENT_E_QUERYSYNTAX");
	case 0x80040204:
		return CSTR("EVENT_E_QUERYFIELD");
	case 0x80040205:
		return CSTR("EVENT_E_INTERNALEXCEPTION");
	case 0x80040206:
		return CSTR("EVENT_E_INTERNALERROR");
	case 0x80040207:
		return CSTR("EVENT_E_INVALID_PER_USER_SID");
	case 0x80040208:
		return CSTR("EVENT_E_USER_EXCEPTION");
	case 0x80040209:
		return CSTR("EVENT_E_TOO_MANY_METHODS");
	case 0x8004020A:
		return CSTR("EVENT_E_MISSING_EVENTCLASS");
	case 0x8004020B:
		return CSTR("EVENT_E_NOT_ALL_REMOVED");
	case 0x8004020C:
		return CSTR("EVENT_E_COMPLUS_NOT_INSTALLED");
	case 0x8004020D:
		return CSTR("EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT");
	case 0x8004020E:
		return CSTR("EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT");
	case 0x8004020F:
		return CSTR("EVENT_E_INVALID_EVENT_CLASS_PARTITION");
	case 0x80040210:
		return CSTR("EVENT_E_PER_USER_SID_NOT_LOGGED_ON");
	case 0x80070005:
		return CSTR("E_ACCESSDENIED");
	case 0x80070006:
		return CSTR("E_HANDLE");
	case 0x8007000E:
		return CSTR("E_OUTOFMEMORY");
	case 0x80070057:
		return CSTR("E_INVALIDARG");
	case 0x8007007A:
		return CSTR("E_NOT_SUFFICIENT_BUFFER");
	case 0x80090001:
		return CSTR("NTE_BAD_UID");
	case 0x80090002:
		return CSTR("NTE_BAD_HASH");
	case 0x80090003:
		return CSTR("NTE_BAD_KEY");
	case 0x80090004:
		return CSTR("NTE_BAD_LEN");
	case 0x80090005:
		return CSTR("NTE_BAD_DATA");
	case 0x80090006:
		return CSTR("NTE_BAD_SIGNATURE");
	case 0x80090007:
		return CSTR("NTE_BAD_VER");
	case 0x80090008:
		return CSTR("NTE_BAD_ALGID");
	case 0x80090009:
		return CSTR("NTE_BAD_FLAGS");
	case 0x8009000A:
		return CSTR("NTE_BAD_TYPE");
	case 0x8009000B:
		return CSTR("NTE_BAD_KEY_STATE");
	case 0x8009000C:
		return CSTR("NTE_BAD_HASH_STATE");
	case 0x8009000D:
		return CSTR("NTE_NO_KEY");
	case 0x8009000E:
		return CSTR("NTE_NO_MEMORY");
	case 0x8009000F:
		return CSTR("NTE_EXISTS");
	case 0x80090010:
		return CSTR("NTE_PERM");
	case 0x80090011:
		return CSTR("NTE_NOT_FOUND");
	case 0x80090012:
		return CSTR("NTE_DOUBLE_ENCRYPT");
	case 0x80090013:
		return CSTR("NTE_BAD_PROVIDER");
	case 0x80090014:
		return CSTR("NTE_BAD_PROV_TYPE");
	case 0x80090015:
		return CSTR("NTE_BAD_PUBLIC_KEY");
	case 0x80090016:
		return CSTR("NTE_BAD_KEYSET");
	case 0x80090017:
		return CSTR("NTE_PROV_TYPE_NOT_DEF");
	case 0x80090018:
		return CSTR("NTE_PROV_TYPE_ENTRY_BAD");
	case 0x80090019:
		return CSTR("NTE_KEYSET_NOT_DEF");
	case 0x8009001A:
		return CSTR("NTE_KEYSET_ENTRY_BAD");
	case 0x8009001B:
		return CSTR("NTE_PROV_TYPE_NO_MATCH");
	case 0x8009001C:
		return CSTR("NTE_SIGNATURE_FILE_BAD");
	case 0x8009001D:
		return CSTR("NTE_PROVIDER_DLL_FAIL");
	case 0x8009001E:
		return CSTR("NTE_PROV_DLL_NOT_FOUND");
	case 0x8009001F:
		return CSTR("NTE_BAD_KEYSET_PARAM");
	case 0x80090020:
		return CSTR("NTE_FAIL");
	case 0x80090021:
		return CSTR("NTE_SYS_ERR");
	case 0x80090022:
		return CSTR("NTE_SILENT_CONTEXT");
	case 0x80090023:
		return CSTR("NTE_TOKEN_KEYSET_STORAGE_FULL");
	case 0x80090024:
		return CSTR("NTE_TEMPORARY_PROFILE");
	case 0x80090025:
		return CSTR("NTE_FIXEDPARAMETER");
	case 0x80090300:
		return CSTR("SEC_E_INSUFFICIENT_MEMORY");
	case 0x80090301:
		return CSTR("SEC_E_INVALID_HANDLE");
	case 0x80090302:
		return CSTR("SEC_E_UNSUPPORTED_FUNCTION");
	case 0x80090303:
		return CSTR("SEC_E_TARGET_UNKNOWN");
	case 0x80090304:
		return CSTR("SEC_E_INTERNAL_ERROR");
	case 0x80090305:
		return CSTR("SEC_E_SECPKG_NOT_FOUND");
	case 0x80090306:
		return CSTR("SEC_E_NOT_OWNER");
	case 0x80090307:
		return CSTR("SEC_E_CANNOT_INSTALL");
	case 0x80090308:
		return CSTR("SEC_E_INVALID_TOKEN");
	case 0x80090309:
		return CSTR("SEC_E_CANNOT_PACK");
	case 0x8009030A:
		return CSTR("SEC_E_QOP_NOT_SUPPORTED");
	case 0x8009030B:
		return CSTR("SEC_E_NO_IMPERSONATION");
	case 0x8009030C:
		return CSTR("SEC_E_LOGON_DENIED");
	case 0x8009030D:
		return CSTR("SEC_E_UNKNOWN_CREDENTIALS");
	case 0x8009030E:
		return CSTR("SEC_E_NO_CREDENTIALS");
	case 0x8009030F:
		return CSTR("SEC_E_MESSAGE_ALTERED");
	case 0x80090310:
		return CSTR("SEC_E_OUT_OF_SEQUENCE");
	case 0x80090311:
		return CSTR("SEC_E_NO_AUTHENTICATING_AUTHORITY");
	case 0x80090316:
		return CSTR("SEC_E_BAD_PKGID");
	case 0x80090317:
		return CSTR("SEC_E_CONTEXT_EXPIRED");
	case 0x80090318:
		return CSTR("SEC_E_INCOMPLETE_MESSAGE");
	case 0x80090320:
		return CSTR("SEC_E_INCOMPLETE_CREDENTIALS");
	case 0x80090321:
		return CSTR("SEC_E_BUFFER_TOO_SMALL");
	case 0x80090322:
		return CSTR("SEC_E_WRONG_PRINCIPAL");
	case 0x80090324:
		return CSTR("SEC_E_TIME_SKEW");
	case 0x80090325:
		return CSTR("SEC_E_UNTRUSTED_ROOT");
	case 0x80090326:
		return CSTR("SEC_E_ILLEGAL_MESSAGE");
	case 0x80090327:
		return CSTR("SEC_E_CERT_UNKNOWN");
	case 0x80090328:
		return CSTR("SEC_E_CERT_EXPIRED");
	case 0x80090329:
		return CSTR("SEC_E_ENCRYPT_FAILURE");
	case 0x80090330:
		return CSTR("SEC_E_DECRYPT_FAILURE");
	case 0x80090331:
		return CSTR("SEC_E_ALGORITHM_MISMATCH");
	case 0x80090332:
		return CSTR("SEC_E_SECURITY_QOS_FAILED");
	case 0x80090333:
		return CSTR("SEC_E_UNFINISHED_CONTEXT_DELETED");
	case 0x80090334:
		return CSTR("SEC_E_NO_TGT_REPLY");
	case 0x80090335:
		return CSTR("SEC_E_NO_IP_ADDRESSES");
	case 0x80090336:
		return CSTR("SEC_E_WRONG_CREDENTIAL_HANDLE");
	case 0x80090337:
		return CSTR("SEC_E_CRYPTO_SYSTEM_INVALID");
	case 0x80090338:
		return CSTR("SEC_E_MAX_REFERRALS_EXCEEDED");
	case 0x80090339:
		return CSTR("SEC_E_MUST_BE_KDC");
	default:
		return CSTR("Unknown");
	}
}
